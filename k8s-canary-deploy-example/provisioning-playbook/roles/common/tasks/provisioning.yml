      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 32222
              to_port: 32222
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 32111
              to_port: 32111
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 32112
              to_port: 32112
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instances
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2
      
      - name: add ec2 instances to a temporary inventory
        add_host: name={{ item.public_ip }} groups=debijenkorf-new
        with_items: "{{ ec2.instances }}"
      
      - name: Add the newly created EC2 instance into inventory 
        local_action: lineinfile 
                      dest="./hosts" 
                      regexp={{ item.public_ip }} 
                      insertafter="[giropopsKubernetes]" line={{ item.public_ip }}
        with_items: "{{ ec2.instances }}"

      - name: Add the private IP of newly created EC2 instance into inventory 
        local_action: lineinfile 
                      dest="./hosts" 
                      regexp={{ item.private_ip }} 
                      insertafter="[giropopsKubernetes]" line={{ item.private_ip }}
        with_items: "{{ ec2.instances }}"

      - name: Wait for SSH
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Add the newly created EC2 into known_hosts 
        shell: ssh-keyscan -H {{ item.public_ip }} >> ~/.ssh/known_hosts
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: giropopsKubernetes    
